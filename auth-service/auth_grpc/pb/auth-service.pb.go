// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth-service.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WriteToRedisRequest struct {
	TenantID             string   `protobuf:"bytes,1,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Ex                   int64    `protobuf:"varint,4,opt,name=ex,proto3" json:"ex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteToRedisRequest) Reset()         { *m = WriteToRedisRequest{} }
func (m *WriteToRedisRequest) String() string { return proto.CompactTextString(m) }
func (*WriteToRedisRequest) ProtoMessage()    {}
func (*WriteToRedisRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40c3308acdd691b6, []int{0}
}

func (m *WriteToRedisRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteToRedisRequest.Unmarshal(m, b)
}
func (m *WriteToRedisRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteToRedisRequest.Marshal(b, m, deterministic)
}
func (m *WriteToRedisRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteToRedisRequest.Merge(m, src)
}
func (m *WriteToRedisRequest) XXX_Size() int {
	return xxx_messageInfo_WriteToRedisRequest.Size(m)
}
func (m *WriteToRedisRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteToRedisRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteToRedisRequest proto.InternalMessageInfo

func (m *WriteToRedisRequest) GetTenantID() string {
	if m != nil {
		return m.TenantID
	}
	return ""
}

func (m *WriteToRedisRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *WriteToRedisRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *WriteToRedisRequest) GetEx() int64 {
	if m != nil {
		return m.Ex
	}
	return 0
}

type WriteToRedisResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteToRedisResponse) Reset()         { *m = WriteToRedisResponse{} }
func (m *WriteToRedisResponse) String() string { return proto.CompactTextString(m) }
func (*WriteToRedisResponse) ProtoMessage()    {}
func (*WriteToRedisResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40c3308acdd691b6, []int{1}
}

func (m *WriteToRedisResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteToRedisResponse.Unmarshal(m, b)
}
func (m *WriteToRedisResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteToRedisResponse.Marshal(b, m, deterministic)
}
func (m *WriteToRedisResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteToRedisResponse.Merge(m, src)
}
func (m *WriteToRedisResponse) XXX_Size() int {
	return xxx_messageInfo_WriteToRedisResponse.Size(m)
}
func (m *WriteToRedisResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteToRedisResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WriteToRedisResponse proto.InternalMessageInfo

func (m *WriteToRedisResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ReadFromRedisRequest struct {
	TenantID             string   `protobuf:"bytes,1,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadFromRedisRequest) Reset()         { *m = ReadFromRedisRequest{} }
func (m *ReadFromRedisRequest) String() string { return proto.CompactTextString(m) }
func (*ReadFromRedisRequest) ProtoMessage()    {}
func (*ReadFromRedisRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40c3308acdd691b6, []int{2}
}

func (m *ReadFromRedisRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadFromRedisRequest.Unmarshal(m, b)
}
func (m *ReadFromRedisRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadFromRedisRequest.Marshal(b, m, deterministic)
}
func (m *ReadFromRedisRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadFromRedisRequest.Merge(m, src)
}
func (m *ReadFromRedisRequest) XXX_Size() int {
	return xxx_messageInfo_ReadFromRedisRequest.Size(m)
}
func (m *ReadFromRedisRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadFromRedisRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadFromRedisRequest proto.InternalMessageInfo

func (m *ReadFromRedisRequest) GetTenantID() string {
	if m != nil {
		return m.TenantID
	}
	return ""
}

func (m *ReadFromRedisRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type ReadFromRedisResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadFromRedisResponse) Reset()         { *m = ReadFromRedisResponse{} }
func (m *ReadFromRedisResponse) String() string { return proto.CompactTextString(m) }
func (*ReadFromRedisResponse) ProtoMessage()    {}
func (*ReadFromRedisResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40c3308acdd691b6, []int{3}
}

func (m *ReadFromRedisResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadFromRedisResponse.Unmarshal(m, b)
}
func (m *ReadFromRedisResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadFromRedisResponse.Marshal(b, m, deterministic)
}
func (m *ReadFromRedisResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadFromRedisResponse.Merge(m, src)
}
func (m *ReadFromRedisResponse) XXX_Size() int {
	return xxx_messageInfo_ReadFromRedisResponse.Size(m)
}
func (m *ReadFromRedisResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadFromRedisResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadFromRedisResponse proto.InternalMessageInfo

func (m *ReadFromRedisResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ReadFromRedisResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ReadFromRedisWithExResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Ex                   int64    `protobuf:"varint,2,opt,name=ex,proto3" json:"ex,omitempty"`
	Value                string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadFromRedisWithExResponse) Reset()         { *m = ReadFromRedisWithExResponse{} }
func (m *ReadFromRedisWithExResponse) String() string { return proto.CompactTextString(m) }
func (*ReadFromRedisWithExResponse) ProtoMessage()    {}
func (*ReadFromRedisWithExResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40c3308acdd691b6, []int{4}
}

func (m *ReadFromRedisWithExResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadFromRedisWithExResponse.Unmarshal(m, b)
}
func (m *ReadFromRedisWithExResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadFromRedisWithExResponse.Marshal(b, m, deterministic)
}
func (m *ReadFromRedisWithExResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadFromRedisWithExResponse.Merge(m, src)
}
func (m *ReadFromRedisWithExResponse) XXX_Size() int {
	return xxx_messageInfo_ReadFromRedisWithExResponse.Size(m)
}
func (m *ReadFromRedisWithExResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadFromRedisWithExResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadFromRedisWithExResponse proto.InternalMessageInfo

func (m *ReadFromRedisWithExResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ReadFromRedisWithExResponse) GetEx() int64 {
	if m != nil {
		return m.Ex
	}
	return 0
}

func (m *ReadFromRedisWithExResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type DoAuthRequest struct {
	TenantID             string   `protobuf:"bytes,1,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	AccessToken          string   `protobuf:"bytes,2,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoAuthRequest) Reset()         { *m = DoAuthRequest{} }
func (m *DoAuthRequest) String() string { return proto.CompactTextString(m) }
func (*DoAuthRequest) ProtoMessage()    {}
func (*DoAuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_40c3308acdd691b6, []int{5}
}

func (m *DoAuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoAuthRequest.Unmarshal(m, b)
}
func (m *DoAuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoAuthRequest.Marshal(b, m, deterministic)
}
func (m *DoAuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoAuthRequest.Merge(m, src)
}
func (m *DoAuthRequest) XXX_Size() int {
	return xxx_messageInfo_DoAuthRequest.Size(m)
}
func (m *DoAuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DoAuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DoAuthRequest proto.InternalMessageInfo

func (m *DoAuthRequest) GetTenantID() string {
	if m != nil {
		return m.TenantID
	}
	return ""
}

func (m *DoAuthRequest) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type DoAuthResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	UserID               uint32   `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DoAuthResponse) Reset()         { *m = DoAuthResponse{} }
func (m *DoAuthResponse) String() string { return proto.CompactTextString(m) }
func (*DoAuthResponse) ProtoMessage()    {}
func (*DoAuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_40c3308acdd691b6, []int{6}
}

func (m *DoAuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoAuthResponse.Unmarshal(m, b)
}
func (m *DoAuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoAuthResponse.Marshal(b, m, deterministic)
}
func (m *DoAuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoAuthResponse.Merge(m, src)
}
func (m *DoAuthResponse) XXX_Size() int {
	return xxx_messageInfo_DoAuthResponse.Size(m)
}
func (m *DoAuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DoAuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DoAuthResponse proto.InternalMessageInfo

func (m *DoAuthResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *DoAuthResponse) GetUserID() uint32 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func init() {
	proto.RegisterType((*WriteToRedisRequest)(nil), "pb.WriteToRedisRequest")
	proto.RegisterType((*WriteToRedisResponse)(nil), "pb.WriteToRedisResponse")
	proto.RegisterType((*ReadFromRedisRequest)(nil), "pb.ReadFromRedisRequest")
	proto.RegisterType((*ReadFromRedisResponse)(nil), "pb.ReadFromRedisResponse")
	proto.RegisterType((*ReadFromRedisWithExResponse)(nil), "pb.ReadFromRedisWithExResponse")
	proto.RegisterType((*DoAuthRequest)(nil), "pb.DoAuthRequest")
	proto.RegisterType((*DoAuthResponse)(nil), "pb.DoAuthResponse")
}

func init() { proto.RegisterFile("auth-service.proto", fileDescriptor_40c3308acdd691b6) }

var fileDescriptor_40c3308acdd691b6 = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0xcf, 0x4e, 0xc2, 0x40,
	0x10, 0xc6, 0x61, 0x51, 0xc4, 0x41, 0x88, 0x0e, 0xa8, 0xb5, 0x1e, 0x24, 0x7b, 0xe2, 0x22, 0xf1,
	0xcf, 0x13, 0xa8, 0x15, 0xc3, 0xc1, 0xcb, 0x4a, 0xc2, 0xc9, 0x43, 0x81, 0x49, 0x68, 0xd0, 0x6e,
	0xed, 0x6e, 0x09, 0x3e, 0x8e, 0x6f, 0x6a, 0xd8, 0x52, 0x6c, 0xa5, 0x11, 0xe2, 0xad, 0x33, 0xb3,
	0xfd, 0xcd, 0xcc, 0xf7, 0xed, 0x02, 0xba, 0x91, 0x9e, 0x5c, 0x2a, 0x0a, 0x67, 0xde, 0x88, 0x3a,
	0x41, 0x28, 0xb5, 0x44, 0x16, 0x0c, 0xb9, 0x07, 0x8d, 0x41, 0xe8, 0x69, 0xea, 0x4b, 0x41, 0x63,
	0x4f, 0x09, 0xfa, 0x88, 0x48, 0x69, 0xb4, 0xa1, 0xa2, 0xc9, 0x77, 0x7d, 0xdd, 0x73, 0xac, 0x62,
	0xab, 0xd8, 0xde, 0x17, 0xab, 0x18, 0x0f, 0xa1, 0x34, 0xa5, 0x4f, 0x8b, 0x99, 0xf4, 0xe2, 0x13,
	0x9b, 0xb0, 0x3b, 0x73, 0xdf, 0x22, 0xb2, 0x4a, 0x26, 0x17, 0x07, 0x58, 0x07, 0x46, 0x73, 0x6b,
	0xa7, 0x55, 0x6c, 0x97, 0x04, 0xa3, 0x39, 0xbf, 0x82, 0x66, 0xb6, 0x95, 0x0a, 0xa4, 0xaf, 0x08,
	0x2d, 0xd8, 0x53, 0xd1, 0x68, 0x44, 0x4a, 0x99, 0x56, 0x15, 0x91, 0x84, 0xdc, 0x81, 0xa6, 0x20,
	0x77, 0xdc, 0x0d, 0xe5, 0xfb, 0xff, 0xa7, 0xe3, 0x4f, 0x70, 0xfc, 0x8b, 0xb2, 0xa9, 0xf1, 0xcf,
	0x42, 0x2c, 0xb5, 0x10, 0x7f, 0x85, 0xf3, 0x0c, 0x68, 0xe0, 0xe9, 0xc9, 0xe3, 0x7c, 0x0b, 0x5c,
	0xac, 0x04, 0x4b, 0x94, 0xc8, 0xd7, 0x8b, 0x3f, 0x43, 0xcd, 0x91, 0x77, 0x91, 0x9e, 0x6c, 0xb3,
	0x66, 0x0b, 0xaa, 0xae, 0x81, 0xf7, 0xe5, 0x94, 0xfc, 0xe5, 0x9c, 0xe9, 0x14, 0xbf, 0x87, 0x7a,
	0x82, 0xdb, 0x38, 0xe0, 0x09, 0x94, 0x23, 0x45, 0x61, 0xcf, 0x31, 0xa0, 0x9a, 0x58, 0x46, 0x37,
	0x5f, 0x0c, 0xaa, 0x0b, 0xc4, 0x4b, 0x7c, 0x6f, 0xf0, 0x01, 0x0e, 0xd2, 0x16, 0xe2, 0x69, 0x27,
	0x18, 0x76, 0x72, 0xee, 0x8f, 0x6d, 0xad, 0x17, 0xe2, 0x21, 0x78, 0x01, 0xbb, 0x50, 0xcb, 0xc8,
	0x88, 0xe6, 0x70, 0x9e, 0xd1, 0xf6, 0x59, 0x4e, 0x65, 0xc5, 0x11, 0xd0, 0xc8, 0xb1, 0xe3, 0x0f,
	0xda, 0xc5, 0x5a, 0x25, 0xeb, 0x20, 0x2f, 0xe0, 0x35, 0x94, 0x63, 0xd1, 0xf0, 0x68, 0x71, 0x38,
	0xe3, 0x87, 0x8d, 0xe9, 0x54, 0xf2, 0xcb, 0xb0, 0x6c, 0x1e, 0xd3, 0xed, 0x77, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xf5, 0x19, 0xf5, 0xd5, 0x62, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthServiceClient is the client API for AuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthServiceClient interface {
	WriteToRedis(ctx context.Context, in *WriteToRedisRequest, opts ...grpc.CallOption) (*WriteToRedisResponse, error)
	ReadFromRedis(ctx context.Context, in *ReadFromRedisRequest, opts ...grpc.CallOption) (*ReadFromRedisResponse, error)
	ReadFromRedisWithEx(ctx context.Context, in *ReadFromRedisRequest, opts ...grpc.CallOption) (*ReadFromRedisWithExResponse, error)
	DoAuth(ctx context.Context, in *DoAuthRequest, opts ...grpc.CallOption) (*DoAuthResponse, error)
}

type authServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthServiceClient(cc *grpc.ClientConn) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) WriteToRedis(ctx context.Context, in *WriteToRedisRequest, opts ...grpc.CallOption) (*WriteToRedisResponse, error) {
	out := new(WriteToRedisResponse)
	err := c.cc.Invoke(ctx, "/pb.AuthService/WriteToRedis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) ReadFromRedis(ctx context.Context, in *ReadFromRedisRequest, opts ...grpc.CallOption) (*ReadFromRedisResponse, error) {
	out := new(ReadFromRedisResponse)
	err := c.cc.Invoke(ctx, "/pb.AuthService/ReadFromRedis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) ReadFromRedisWithEx(ctx context.Context, in *ReadFromRedisRequest, opts ...grpc.CallOption) (*ReadFromRedisWithExResponse, error) {
	out := new(ReadFromRedisWithExResponse)
	err := c.cc.Invoke(ctx, "/pb.AuthService/ReadFromRedisWithEx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) DoAuth(ctx context.Context, in *DoAuthRequest, opts ...grpc.CallOption) (*DoAuthResponse, error) {
	out := new(DoAuthResponse)
	err := c.cc.Invoke(ctx, "/pb.AuthService/DoAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServiceServer is the server API for AuthService service.
type AuthServiceServer interface {
	WriteToRedis(context.Context, *WriteToRedisRequest) (*WriteToRedisResponse, error)
	ReadFromRedis(context.Context, *ReadFromRedisRequest) (*ReadFromRedisResponse, error)
	ReadFromRedisWithEx(context.Context, *ReadFromRedisRequest) (*ReadFromRedisWithExResponse, error)
	DoAuth(context.Context, *DoAuthRequest) (*DoAuthResponse, error)
}

// UnimplementedAuthServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServiceServer struct {
}

func (*UnimplementedAuthServiceServer) WriteToRedis(ctx context.Context, req *WriteToRedisRequest) (*WriteToRedisResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WriteToRedis not implemented")
}
func (*UnimplementedAuthServiceServer) ReadFromRedis(ctx context.Context, req *ReadFromRedisRequest) (*ReadFromRedisResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadFromRedis not implemented")
}
func (*UnimplementedAuthServiceServer) ReadFromRedisWithEx(ctx context.Context, req *ReadFromRedisRequest) (*ReadFromRedisWithExResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadFromRedisWithEx not implemented")
}
func (*UnimplementedAuthServiceServer) DoAuth(ctx context.Context, req *DoAuthRequest) (*DoAuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DoAuth not implemented")
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_WriteToRedis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteToRedisRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).WriteToRedis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AuthService/WriteToRedis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).WriteToRedis(ctx, req.(*WriteToRedisRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_ReadFromRedis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadFromRedisRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).ReadFromRedis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AuthService/ReadFromRedis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).ReadFromRedis(ctx, req.(*ReadFromRedisRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_ReadFromRedisWithEx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadFromRedisRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).ReadFromRedisWithEx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AuthService/ReadFromRedisWithEx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).ReadFromRedisWithEx(ctx, req.(*ReadFromRedisRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_DoAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DoAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).DoAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.AuthService/DoAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).DoAuth(ctx, req.(*DoAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WriteToRedis",
			Handler:    _AuthService_WriteToRedis_Handler,
		},
		{
			MethodName: "ReadFromRedis",
			Handler:    _AuthService_ReadFromRedis_Handler,
		},
		{
			MethodName: "ReadFromRedisWithEx",
			Handler:    _AuthService_ReadFromRedisWithEx_Handler,
		},
		{
			MethodName: "DoAuth",
			Handler:    _AuthService_DoAuth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth-service.proto",
}
