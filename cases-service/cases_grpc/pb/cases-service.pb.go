// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cases-service.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CountCasesRequest struct {
	Space                []uint32 `protobuf:"varint,1,rep,packed,name=space,proto3" json:"space,omitempty"`
	TenantID             string   `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountCasesRequest) Reset()         { *m = CountCasesRequest{} }
func (m *CountCasesRequest) String() string { return proto.CompactTextString(m) }
func (*CountCasesRequest) ProtoMessage()    {}
func (*CountCasesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed6bda584a2e5158, []int{0}
}

func (m *CountCasesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountCasesRequest.Unmarshal(m, b)
}
func (m *CountCasesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountCasesRequest.Marshal(b, m, deterministic)
}
func (m *CountCasesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountCasesRequest.Merge(m, src)
}
func (m *CountCasesRequest) XXX_Size() int {
	return xxx_messageInfo_CountCasesRequest.Size(m)
}
func (m *CountCasesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountCasesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountCasesRequest proto.InternalMessageInfo

func (m *CountCasesRequest) GetSpace() []uint32 {
	if m != nil {
		return m.Space
	}
	return nil
}

func (m *CountCasesRequest) GetTenantID() string {
	if m != nil {
		return m.TenantID
	}
	return ""
}

type CountBySpace struct {
	Space                uint32   `protobuf:"varint,1,opt,name=space,proto3" json:"space,omitempty"`
	Count                uint32   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountBySpace) Reset()         { *m = CountBySpace{} }
func (m *CountBySpace) String() string { return proto.CompactTextString(m) }
func (*CountBySpace) ProtoMessage()    {}
func (*CountBySpace) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed6bda584a2e5158, []int{1}
}

func (m *CountBySpace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountBySpace.Unmarshal(m, b)
}
func (m *CountBySpace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountBySpace.Marshal(b, m, deterministic)
}
func (m *CountBySpace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountBySpace.Merge(m, src)
}
func (m *CountBySpace) XXX_Size() int {
	return xxx_messageInfo_CountBySpace.Size(m)
}
func (m *CountBySpace) XXX_DiscardUnknown() {
	xxx_messageInfo_CountBySpace.DiscardUnknown(m)
}

var xxx_messageInfo_CountBySpace proto.InternalMessageInfo

func (m *CountBySpace) GetSpace() uint32 {
	if m != nil {
		return m.Space
	}
	return 0
}

func (m *CountBySpace) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type CountCasesResponse struct {
	Result               []*CountBySpace `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CountCasesResponse) Reset()         { *m = CountCasesResponse{} }
func (m *CountCasesResponse) String() string { return proto.CompactTextString(m) }
func (*CountCasesResponse) ProtoMessage()    {}
func (*CountCasesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed6bda584a2e5158, []int{2}
}

func (m *CountCasesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountCasesResponse.Unmarshal(m, b)
}
func (m *CountCasesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountCasesResponse.Marshal(b, m, deterministic)
}
func (m *CountCasesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountCasesResponse.Merge(m, src)
}
func (m *CountCasesResponse) XXX_Size() int {
	return xxx_messageInfo_CountCasesResponse.Size(m)
}
func (m *CountCasesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountCasesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountCasesResponse proto.InternalMessageInfo

func (m *CountCasesResponse) GetResult() []*CountBySpace {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*CountCasesRequest)(nil), "pb.CountCasesRequest")
	proto.RegisterType((*CountBySpace)(nil), "pb.CountBySpace")
	proto.RegisterType((*CountCasesResponse)(nil), "pb.CountCasesResponse")
}

func init() { proto.RegisterFile("cases-service.proto", fileDescriptor_ed6bda584a2e5158) }

var fileDescriptor_ed6bda584a2e5158 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0x4e, 0x2c, 0x4e,
	0x2d, 0xd6, 0x2d, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x2a, 0x48, 0x52, 0x72, 0xe5, 0x12, 0x74, 0xce, 0x2f, 0xcd, 0x2b, 0x71, 0x06, 0xc9, 0x07,
	0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x89, 0x70, 0xb1, 0x16, 0x17, 0x24, 0x26, 0xa7, 0x4a,
	0x30, 0x2a, 0x30, 0x6b, 0xf0, 0x06, 0x41, 0x38, 0x42, 0x52, 0x5c, 0x1c, 0x25, 0xa9, 0x79, 0x89,
	0x79, 0x25, 0x9e, 0x2e, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x70, 0xbe, 0x92, 0x15, 0x17,
	0x0f, 0xd8, 0x18, 0xa7, 0xca, 0x60, 0xb0, 0x5a, 0x24, 0x13, 0x18, 0x11, 0x26, 0x88, 0x70, 0xb1,
	0x26, 0x83, 0x54, 0x81, 0xb5, 0xf3, 0x06, 0x41, 0x38, 0x4a, 0x76, 0x5c, 0x42, 0xc8, 0x4e, 0x28,
	0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0xd2, 0xe0, 0x62, 0x2b, 0x4a, 0x2d, 0x2e, 0xcd, 0x29, 0x01,
	0x3b, 0x82, 0xdb, 0x48, 0x40, 0xaf, 0x20, 0x49, 0x0f, 0xd9, 0x8e, 0x20, 0xa8, 0xbc, 0x91, 0x2f,
	0x17, 0x0f, 0x58, 0x6b, 0x30, 0xc4, 0x73, 0x42, 0xb6, 0x5c, 0x5c, 0x08, 0xf3, 0x84, 0x44, 0xe1,
	0xfa, 0x90, 0xbd, 0x28, 0x25, 0x86, 0x2e, 0x0c, 0xb1, 0x56, 0x89, 0x21, 0x89, 0x0d, 0x1c, 0x38,
	0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x70, 0xd4, 0x79, 0x03, 0x33, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CasesServiceClient is the client API for CasesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CasesServiceClient interface {
	CountCases(ctx context.Context, in *CountCasesRequest, opts ...grpc.CallOption) (*CountCasesResponse, error)
}

type casesServiceClient struct {
	cc *grpc.ClientConn
}

func NewCasesServiceClient(cc *grpc.ClientConn) CasesServiceClient {
	return &casesServiceClient{cc}
}

func (c *casesServiceClient) CountCases(ctx context.Context, in *CountCasesRequest, opts ...grpc.CallOption) (*CountCasesResponse, error) {
	out := new(CountCasesResponse)
	err := c.cc.Invoke(ctx, "/pb.CasesService/CountCases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CasesServiceServer is the server API for CasesService service.
type CasesServiceServer interface {
	CountCases(context.Context, *CountCasesRequest) (*CountCasesResponse, error)
}

// UnimplementedCasesServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCasesServiceServer struct {
}

func (*UnimplementedCasesServiceServer) CountCases(ctx context.Context, req *CountCasesRequest) (*CountCasesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountCases not implemented")
}

func RegisterCasesServiceServer(s *grpc.Server, srv CasesServiceServer) {
	s.RegisterService(&_CasesService_serviceDesc, srv)
}

func _CasesService_CountCases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountCasesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CasesServiceServer).CountCases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CasesService/CountCases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CasesServiceServer).CountCases(ctx, req.(*CountCasesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CasesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.CasesService",
	HandlerType: (*CasesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CountCases",
			Handler:    _CasesService_CountCases_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cases-service.proto",
}
