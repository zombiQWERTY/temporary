version: '3.7'

services:
  consul:
    image: consul
    container_name: consul
    volumes:
      - "./sd-configs/dev:/consul/config"
      - "./containers-dev/consul:/consul/data"
    command: "agent -server -data-dir=/consul/data -ui -bind 0.0.0.0 -client 0.0.0.0 -bootstrap-expect=1"
    restart: always

  nginx:
    container_name: nginx
    image: ittestzinovev/nginx-brotli
    stdin_open: true
    tty: true
    init: true
    ports:
      - '80:80'
    volumes:
      - "./nginx/app-dev.conf:/etc/nginx/conf.d/default.conf"
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "./containers-dev/nginx/logs:/var/log/nginx"
    restart: always

  postgres_users_service:
    image: postgres:alpine
    container_name: postgres_users_service
    volumes:
      - "./containers-dev/users-service/postgresql/data:/var/lib/postgresql/data"
    ports:
      - "5433:5432"
    environment:
      - "POSTGRES_USER=${POSTGRES_USER:-doqa}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-123}"
      - "POSTGRES_DB=${POSTGRES_DB:-develop}"
    restart: always

  postgres_directories_service:
    image: postgres:alpine
    container_name: postgres_directories_service
    volumes:
      - "./containers-dev/directories-service/postgresql/data:/var/lib/postgresql/data"
    ports:
      - "5436:5432"
    environment:
      - "POSTGRES_USER=${POSTGRES_USER:-doqa}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-123}"
      - "POSTGRES_DB=${POSTGRES_DB:-develop}"
    restart: always

  postgres_tenants_service:
    image: postgres:alpine
    container_name: postgres_tenants_service
    volumes:
      - "./containers-dev/tenants-service/postgresql/data:/var/lib/postgresql/data"
    ports:
      - "5434:5432"
    environment:
      - "POSTGRES_USER=${POSTGRES_USER:-doqa}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-123}"
      - "POSTGRES_DB=${POSTGRES_DB:-tenants}"
    restart: always

  postgres_projects_service:
    image: postgres:alpine
    container_name: postgres_projects_service
    volumes:
      - "./containers-dev/projects-service/postgresql/data:/var/lib/postgresql/data"
    ports:
      - "5435:5432"
    environment:
      - "POSTGRES_USER=${POSTGRES_USER:-doqa}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-123}"
      - "POSTGRES_DB=${POSTGRES_DB:-develop}"
    restart: always

  postgres_cases_service:
    image: postgres:alpine
    container_name: postgres_cases_service
    volumes:
      - "./containers-dev/cases-service/postgresql/data:/var/lib/postgresql/data"
    ports:
      - "5437:5432"
    environment:
      - "POSTGRES_USER=${POSTGRES_USER:-doqa}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-123}"
      - "POSTGRES_DB=${POSTGRES_DB:-develop}"
    restart: always

  redis_users_service:
    image: redis
    container_name: redis_users_service
    ports:
      - "6380:6379"
    volumes:
      - "./containers-dev/users-service/redis/data:/data"
    entrypoint: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-123}
    restart: always

  redis_auth_service:
    image: redis
    container_name: redis_auth_service
    ports:
      - "6381:6379"
    volumes:
      - "./containers-dev/auth-service/redis/data:/data"
    entrypoint: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-123}
    restart: always
