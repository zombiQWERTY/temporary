http2_max_field_size 64k;
http2_max_header_size 64k;

gzip on;
gzip_disable "msie6";

gzip_vary on;
gzip_proxied expired no-cache no-store private auth;
gzip_comp_level 6;
gzip_buffers 16 8k;
gzip_http_version 1.1;
gzip_types
    # text/html is always compressed by HttpGzipModule
    text/css
    text/javascript
    text/xml
    text/plain
    text/x-component
    application/javascript
    application/x-javascript
    application/json
    application/xml
    application/rss+xml
    application/atom+xml
    font/truetype
    font/opentype
    application/vnd.ms-fontobject
    image/svg+xml;

brotli off;
brotli_static on;

client_max_body_size        12m;
client_body_buffer_size     128k;
client_header_buffer_size   64K;
large_client_header_buffers 4 256k;

proxy_buffer_size           256k;
proxy_buffers               4 256k;
proxy_busy_buffers_size     256k;

map $http_upgrade $connection_upgrade {
    default Upgrade;
    '' '';
}

ssl_session_cache         shared:SSL:20m;
ssl_session_timeout       10m;

ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
ssl_prefer_server_ciphers on;
ssl_ciphers               "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

ssl_stapling              on;
ssl_stapling_verify       on;
resolver                  8.8.8.8 8.8.4.4;


##########################################################################################

upstream auth_service {
    server auth_service:8081;
}

upstream users_service {
    server users_service:8080;
}

upstream projects_service {
    server projects_service:8080;
}

upstream cases_service {
    server cases_service:8080;
}

upstream landing_service {
    server landing_service:8080;
}

upstream signal_service {
    server signal_service:8080;
}

upstream directories_service {
    server directories_service:8090;
}

upstream adminer {
    server adminer:8080;
}

upstream consul {
    server consul:8500;
}

upstream spa {
    server spa:8080;
}

upstream landing {
    server landing:8080;
}

server {
    listen         31115;
    listen         [::]:31115;
    server_name    demo.doqa.ittest-team.ru;

    location / {
        proxy_pass  http://adminer;
    }
}

server {
    listen         31116;
    listen         [::]:31116;
    server_name    demo.doqa.ittest-team.ru;

    location / {
        proxy_pass  http://consul;
    }
}

map $http_host $tenantID {
    default "";
    ~^(?<tnt>\w+)\.(.*)$ $tnt;
}

server {
    listen 80;
    listen [::]:80;
    server_name *.demo.doqa.ittest-team.ru;
    return 301 https://$host$request_uri;
}

server {
    listen 80;
    listen [::]:80;
    server_name demo.doqa.ittest-team.ru;
    return 301 https://$host$request_uri;
}

server {
    listen         443 ssl http2;
    listen [::]:443 ssl http2;
    server_name    demo.doqa.ittest-team.ru;

    ssl_certificate     /etc/letsencrypt/live/demo.doqa.ittest-team.ru-0001/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/demo.doqa.ittest-team.ru-0001/privkey.pem;

    location = /robots.txt {
       add_header Content-Type text/plain;
       return 200 "User-agent: *\nDisallow: /\n";
    }

    location / {
        root        /var/www/app;

        proxy_set_header   X-Forwarded-Host $http_host;    # necessary for proper absolute redirects
        proxy_set_header   Upgrade $http_upgrade;          # WebSocket support
        proxy_set_header   Connection $connection_upgrade; # WebSocket support

        proxy_set_header   Host             $http_host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto http;

        proxy_pass  http://landing;
    }

    location /landing-api {
        proxy_set_header   X-Forwarded-Host $http_host;    # necessary for proper absolute redirects
        proxy_set_header   Upgrade $http_upgrade;          # WebSocket support
        proxy_set_header   Connection $connection_upgrade; # WebSocket support

        proxy_set_header   Host             $http_host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto http;

        proxy_pass_request_headers      on;

        proxy_pass         http://landing_service;
    }
}

server {
    listen         443 ssl http2;
    listen [::]:443 ssl http2;
    server_name    *.demo.doqa.ittest-team.ru;

    ssl_certificate     /etc/letsencrypt/live/demo.doqa.ittest-team.ru-0001/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/demo.doqa.ittest-team.ru-0001/privkey.pem;

    set $cors_domain 'http://my-secure-dev-domain-53746uftwgjydshv25465.com:4200';

    location ~ ^/users-api/(auth/login|auth/register|auth/refresh-token|check-short-name|auth/invited-info) {
        proxy_set_header   X-Forwarded-Host $http_host;    # necessary for proper absolute redirects
        proxy_set_header   Upgrade $http_upgrade;          # WebSocket support
        proxy_set_header   Connection $connection_upgrade; # WebSocket support

        proxy_set_header   Host               $http_host;
        proxy_set_header   X-Real-IP          $remote_addr;
        proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto  http;
        proxy_set_header   X-Forwarded-Tenant $tenantID;

        if ($request_method ~* "(GET|POST|PUT|PATCH|DELETE)") {
            add_header 'Access-Control-Allow-Origin' $cors_domain always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,Authorization' always;
        }

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_domain always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,Authorization' always;

            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }

        proxy_pass         http://users_service;
    }

    location /users-api {
        auth_request /auth;

        auth_request_set   $user        $upstream_http_x_forwarded_user;
        auth_request_set   $roles       $upstream_http_x_forwarded_roles;
        auth_request_set   $permissions $upstream_http_x_forwarded_permissions;
        auth_request_set   $tenant      $upstream_http_x_forwarded_tenant;

        proxy_set_header   X-Forwarded-User $user;
        proxy_set_header   X-Forwarded-Roles $roles;
        proxy_set_header   X-Forwarded-Permissions $permissions;
        proxy_set_header   X-Forwarded-Tenant $tenant;

        proxy_set_header   X-Forwarded-Host $http_host;    # necessary for proper absolute redirects
        proxy_set_header   Upgrade $http_upgrade;          # WebSocket support
        proxy_set_header   Connection $connection_upgrade; # WebSocket support

        proxy_set_header   Host             $http_host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto http;

        if ($request_method ~* "(GET|POST|PUT|PATCH|DELETE)") {
            add_header 'Access-Control-Allow-Origin' $cors_domain always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,Authorization' always;
        }

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_domain always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,Authorization' always;

            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }

        proxy_pass         http://users_service;
    }

    location /projects-api {
        auth_request /auth;

        auth_request_set   $user        $upstream_http_x_forwarded_user;
        auth_request_set   $roles       $upstream_http_x_forwarded_roles;
        auth_request_set   $permissions $upstream_http_x_forwarded_permissions;
        auth_request_set   $tenant      $upstream_http_x_forwarded_tenant;

        proxy_set_header   X-Forwarded-User $user;
        proxy_set_header   X-Forwarded-Roles $roles;
        proxy_set_header   X-Forwarded-Permissions $permissions;
        proxy_set_header   X-Forwarded-Tenant $tenant;

        proxy_set_header   X-Forwarded-Host $http_host;    # necessary for proper absolute redirects
        proxy_set_header   Upgrade $http_upgrade;          # WebSocket support
        proxy_set_header   Connection $connection_upgrade; # WebSocket support

        proxy_set_header   Host             $http_host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto http;

        if ($request_method ~* "(GET|POST|PUT|PATCH|DELETE)") {
            add_header 'Access-Control-Allow-Origin' $cors_domain always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,Authorization' always;
        }

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_domain always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,Authorization' always;

            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }

        proxy_pass         http://projects_service;
    }

    location /cases-api {
        auth_request /auth;

        auth_request_set   $user        $upstream_http_x_forwarded_user;
        auth_request_set   $roles       $upstream_http_x_forwarded_roles;
        auth_request_set   $permissions $upstream_http_x_forwarded_permissions;
        auth_request_set   $tenant      $upstream_http_x_forwarded_tenant;

        proxy_set_header   X-Forwarded-User $user;
        proxy_set_header   X-Forwarded-Roles $roles;
        proxy_set_header   X-Forwarded-Permissions $permissions;
        proxy_set_header   X-Forwarded-Tenant $tenant;

        proxy_set_header   X-Forwarded-Host $http_host;    # necessary for proper absolute redirects
        proxy_set_header   Upgrade $http_upgrade;          # WebSocket support
        proxy_set_header   Connection $connection_upgrade; # WebSocket support

        proxy_set_header   Host             $http_host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto http;

        if ($request_method ~* "(GET|POST|PUT|PATCH|DELETE)") {
            add_header 'Access-Control-Allow-Origin' $cors_domain always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,Authorization' always;
        }

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_domain always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,Authorization' always;

            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }

        proxy_pass         http://cases_service;
    }

    location /directories-api {
        auth_request /auth;

        auth_request_set   $user        $upstream_http_x_forwarded_user;
        auth_request_set   $roles       $upstream_http_x_forwarded_roles;
        auth_request_set   $permissions $upstream_http_x_forwarded_permissions;
        auth_request_set   $tenant      $upstream_http_x_forwarded_tenant;

        proxy_set_header   X-Forwarded-User $user;
        proxy_set_header   X-Forwarded-Roles $roles;
        proxy_set_header   X-Forwarded-Permissions $permissions;
        proxy_set_header   X-Forwarded-Tenant $tenant;

        proxy_set_header   X-Forwarded-Host $http_host;    # necessary for proper absolute redirects
        proxy_set_header   Upgrade $http_upgrade;          # WebSocket support
        proxy_set_header   Connection $connection_upgrade; # WebSocket support

        proxy_set_header   Host             $http_host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto http;

        if ($request_method ~* "(GET|POST|PUT|PATCH|DELETE)") {
            add_header 'Access-Control-Allow-Origin' $cors_domain always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,Authorization' always;
        }

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_domain always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,Authorization' always;

            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }

        proxy_pass         http://directories_service;
    }

    location /signal-api {
        proxy_set_header   X-Forwarded-Host $http_host;    # necessary for proper absolute redirects
        proxy_set_header   Upgrade $http_upgrade;          # WebSocket support
        proxy_set_header   Connection $connection_upgrade; # WebSocket support
        proxy_http_version 1.1;

        proxy_pass         http://signal_service;
    }

    location /auth {
        internal;

        proxy_pass_request_body off;
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-METHOD $request_method;
        proxy_set_header Content-Length "";

        proxy_set_header   X-Forwarded-Host $http_host;    # necessary for proper absolute redirects
        proxy_set_header   Upgrade $http_upgrade;          # WebSocket support
        proxy_set_header   Connection $connection_upgrade; # WebSocket support

        proxy_set_header   Host              $http_host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto http;

        proxy_pass http://auth_service;
    }

    location = /robots.txt {
       add_header Content-Type text/plain;
       return 200 "User-agent: *\nDisallow: /\n";
    }

    location / {
        root        /var/www/app;

        proxy_set_header   X-Forwarded-Host $http_host;    # necessary for proper absolute redirects
        proxy_set_header   Upgrade $http_upgrade;          # WebSocket support
        proxy_set_header   Connection $connection_upgrade; # WebSocket support

        proxy_set_header   Host             $http_host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto http;

        proxy_pass  http://spa;
    }
}

##########################################################################################
