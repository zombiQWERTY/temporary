http2_max_field_size 64k;
http2_max_header_size 64k;

gzip on;
gzip_disable "msie6";

gzip_vary on;
gzip_proxied expired no-cache no-store private auth;
gzip_comp_level 6;
gzip_buffers 16 8k;
gzip_http_version 1.1;
gzip_types
    # text/html is always compressed by HttpGzipModule
    text/css
    text/javascript
    text/xml
    text/plain
    text/x-component
    application/javascript
    application/x-javascript
    application/json
    application/xml
    application/rss+xml
    application/atom+xml
    font/truetype
    font/opentype
    application/vnd.ms-fontobject
    image/svg+xml;

brotli off;
brotli_static on;

client_max_body_size        5M;
client_body_buffer_size     128k;
client_header_buffer_size   64K;
large_client_header_buffers 4 256k;

proxy_buffer_size           256k;
proxy_buffers               4 256k;
proxy_busy_buffers_size     256k;

map $http_upgrade $connection_upgrade {
    default Upgrade;
    '' '';
}

ssl_session_cache         shared:SSL:20m;
ssl_session_timeout       10m;

ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
ssl_prefer_server_ciphers on;
ssl_ciphers               "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

ssl_stapling              on;
ssl_stapling_verify       on;
resolver                  8.8.8.8 8.8.4.4;


##########################################################################################

upstream users_service {
    server host.docker.internal:8080;
}

upstream projects_service {
    server host.docker.internal:8086;
}

upstream cases_service {
    server host.docker.internal:8091;
}

upstream landing_service {
    server host.docker.internal:8087;
}

upstream auth_service {
    server host.docker.internal:8081;
}

upstream signal_service {
    server host.docker.internal:8089;
}

upstream directories_service {
    server host.docker.internal:8090;
}

upstream consul {
    server consul:8500;
}

server {
    listen         80;
    listen         [::]:80;
    server_name    consul.doqa.local;

    location / {
        proxy_pass  http://consul;
    }
}

map $http_host $tenantID {
    default "";
    ~^(?<tnt>\w+)\.(.*)$ $tnt;
}

server {
    listen         80;
    listen         [::]:80;
    server_name    doqa.local;
    # access_log     off;

    location = /robots.txt {
       add_header Content-Type text/plain;
       return 200 "User-agent: *\nDisallow: /\n";
    }

    location /landing-api {
        proxy_set_header   X-Forwarded-Host $http_host;    # necessary for proper absolute redirects
        proxy_set_header   Upgrade $http_upgrade;          # WebSocket support
        proxy_set_header   Connection $connection_upgrade; # WebSocket support

        proxy_set_header   Host             $http_host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto http;

        proxy_pass         http://landing_service;
    }
}

server {
    listen         80;
    listen         [::]:80;
    server_name    *.doqa.local;
    # access_log     off;

    location ~ ^/users-api/(auth/login|auth/register|auth/refresh-token|check-short-name|auth/invited-info) {
        proxy_set_header   X-Forwarded-Host $http_host;    # necessary for proper absolute redirects
        proxy_set_header   Upgrade $http_upgrade;          # WebSocket support
        proxy_set_header   Connection $connection_upgrade; # WebSocket support

        proxy_set_header   Host               $http_host;
        proxy_set_header   X-Real-IP          $remote_addr;
        proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto  http;
        proxy_set_header   X-Forwarded-Tenant $tenantID;

        proxy_pass         http://users_service;
    }

    location /users-api {
        auth_request /auth;

        auth_request_set   $user        $upstream_http_x_forwarded_user;
        auth_request_set   $roles       $upstream_http_x_forwarded_roles;
        auth_request_set   $permissions $upstream_http_x_forwarded_permissions;
        auth_request_set   $tenant      $upstream_http_x_forwarded_tenant;

        proxy_set_header   X-Forwarded-User $user;
        proxy_set_header   X-Forwarded-Roles $roles;
        proxy_set_header   X-Forwarded-Permissions $permissions;
        proxy_set_header   X-Forwarded-Tenant $tenant;

        proxy_set_header   X-Forwarded-Host $http_host;    # necessary for proper absolute redirects
        proxy_set_header   Upgrade $http_upgrade;          # WebSocket support
        proxy_set_header   Connection $connection_upgrade; # WebSocket support

        proxy_set_header   Host             $http_host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto http;

        proxy_pass         http://users_service;
    }

    location /projects-api {
        auth_request /auth;

        auth_request_set   $user        $upstream_http_x_forwarded_user;
        auth_request_set   $roles       $upstream_http_x_forwarded_roles;
        auth_request_set   $permissions $upstream_http_x_forwarded_permissions;
        auth_request_set   $tenant      $upstream_http_x_forwarded_tenant;

        proxy_set_header   X-Forwarded-User $user;
        proxy_set_header   X-Forwarded-Roles $roles;
        proxy_set_header   X-Forwarded-Permissions $permissions;
        proxy_set_header   X-Forwarded-Tenant $tenant;

        proxy_set_header   X-Forwarded-Host $http_host;    # necessary for proper absolute redirects
        proxy_set_header   Upgrade $http_upgrade;          # WebSocket support
        proxy_set_header   Connection $connection_upgrade; # WebSocket support

        proxy_set_header   Host             $http_host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto http;

        proxy_pass         http://projects_service;
    }

    location /cases-api {
        auth_request /auth;

        auth_request_set   $user        $upstream_http_x_forwarded_user;
        auth_request_set   $roles       $upstream_http_x_forwarded_roles;
        auth_request_set   $permissions $upstream_http_x_forwarded_permissions;
        auth_request_set   $tenant      $upstream_http_x_forwarded_tenant;

        proxy_set_header   X-Forwarded-User $user;
        proxy_set_header   X-Forwarded-Roles $roles;
        proxy_set_header   X-Forwarded-Permissions $permissions;
        proxy_set_header   X-Forwarded-Tenant $tenant;

        proxy_set_header   X-Forwarded-Host $http_host;    # necessary for proper absolute redirects
        proxy_set_header   Upgrade $http_upgrade;          # WebSocket support
        proxy_set_header   Connection $connection_upgrade; # WebSocket support

        proxy_set_header   Host             $http_host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto http;

        proxy_pass         http://cases_service;
    }

    location /directories-api {
        auth_request /auth;

        auth_request_set   $user        $upstream_http_x_forwarded_user;
        auth_request_set   $roles       $upstream_http_x_forwarded_roles;
        auth_request_set   $permissions $upstream_http_x_forwarded_permissions;
        auth_request_set   $tenant      $upstream_http_x_forwarded_tenant;

        proxy_set_header   X-Forwarded-User $user;
        proxy_set_header   X-Forwarded-Roles $roles;
        proxy_set_header   X-Forwarded-Permissions $permissions;
        proxy_set_header   X-Forwarded-Tenant $tenant;

        proxy_set_header   X-Forwarded-Host $http_host;    # necessary for proper absolute redirects
        proxy_set_header   Upgrade $http_upgrade;          # WebSocket support
        proxy_set_header   Connection $connection_upgrade; # WebSocket support

        proxy_set_header   Host             $http_host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto http;

        proxy_pass         http://directories_service;
    }

    location /signal-api {
        proxy_set_header   X-Forwarded-Host $http_host;    # necessary for proper absolute redirects
        proxy_set_header   Upgrade $http_upgrade;          # WebSocket support
        proxy_set_header   Connection $connection_upgrade; # WebSocket support
        proxy_http_version 1.1;

        proxy_pass         http://signal_service;
    }

    location /auth {
        internal;

        proxy_pass_request_body off;
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-METHOD $request_method;
        proxy_set_header Content-Length "";

        proxy_set_header   X-Forwarded-Host $http_host;    # necessary for proper absolute redirects
        proxy_set_header   Upgrade $http_upgrade;          # WebSocket support
        proxy_set_header   Connection $connection_upgrade; # WebSocket support

        proxy_set_header   Host             $http_host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto http;

        proxy_pass http://auth_service;
    }

    location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /\n";
    }
}

##########################################################################################
