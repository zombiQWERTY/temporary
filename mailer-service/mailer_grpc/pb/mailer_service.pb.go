// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mailer_service.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SendRequest struct {
	Email                []*Email `protobuf:"bytes,1,rep,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendRequest) Reset()         { *m = SendRequest{} }
func (m *SendRequest) String() string { return proto.CompactTextString(m) }
func (*SendRequest) ProtoMessage()    {}
func (*SendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f978737ae6b5eaf, []int{0}
}

func (m *SendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendRequest.Unmarshal(m, b)
}
func (m *SendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendRequest.Marshal(b, m, deterministic)
}
func (m *SendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendRequest.Merge(m, src)
}
func (m *SendRequest) XXX_Size() int {
	return xxx_messageInfo_SendRequest.Size(m)
}
func (m *SendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendRequest proto.InternalMessageInfo

func (m *SendRequest) GetEmail() []*Email {
	if m != nil {
		return m.Email
	}
	return nil
}

type SendResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error                *Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendResponse) Reset()         { *m = SendResponse{} }
func (m *SendResponse) String() string { return proto.CompactTextString(m) }
func (*SendResponse) ProtoMessage()    {}
func (*SendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f978737ae6b5eaf, []int{1}
}

func (m *SendResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendResponse.Unmarshal(m, b)
}
func (m *SendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendResponse.Marshal(b, m, deterministic)
}
func (m *SendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendResponse.Merge(m, src)
}
func (m *SendResponse) XXX_Size() int {
	return xxx_messageInfo_SendResponse.Size(m)
}
func (m *SendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendResponse proto.InternalMessageInfo

func (m *SendResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *SendResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type Email struct {
	To                   string   `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	SenderEmail          string   `protobuf:"bytes,2,opt,name=senderEmail,proto3" json:"senderEmail,omitempty"`
	SenderIdentity       string   `protobuf:"bytes,3,opt,name=senderIdentity,proto3" json:"senderIdentity,omitempty"`
	Subject              string   `protobuf:"bytes,4,opt,name=Subject,proto3" json:"Subject,omitempty"`
	Html                 string   `protobuf:"bytes,5,opt,name=Html,proto3" json:"Html,omitempty"`
	Plain                string   `protobuf:"bytes,6,opt,name=Plain,proto3" json:"Plain,omitempty"`
	Template             string   `protobuf:"bytes,7,opt,name=Template,proto3" json:"Template,omitempty"`
	CustomContent        string   `protobuf:"bytes,8,opt,name=CustomContent,proto3" json:"CustomContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Email) Reset()         { *m = Email{} }
func (m *Email) String() string { return proto.CompactTextString(m) }
func (*Email) ProtoMessage()    {}
func (*Email) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f978737ae6b5eaf, []int{2}
}

func (m *Email) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Email.Unmarshal(m, b)
}
func (m *Email) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Email.Marshal(b, m, deterministic)
}
func (m *Email) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Email.Merge(m, src)
}
func (m *Email) XXX_Size() int {
	return xxx_messageInfo_Email.Size(m)
}
func (m *Email) XXX_DiscardUnknown() {
	xxx_messageInfo_Email.DiscardUnknown(m)
}

var xxx_messageInfo_Email proto.InternalMessageInfo

func (m *Email) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Email) GetSenderEmail() string {
	if m != nil {
		return m.SenderEmail
	}
	return ""
}

func (m *Email) GetSenderIdentity() string {
	if m != nil {
		return m.SenderIdentity
	}
	return ""
}

func (m *Email) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Email) GetHtml() string {
	if m != nil {
		return m.Html
	}
	return ""
}

func (m *Email) GetPlain() string {
	if m != nil {
		return m.Plain
	}
	return ""
}

func (m *Email) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

func (m *Email) GetCustomContent() string {
	if m != nil {
		return m.CustomContent
	}
	return ""
}

type Error struct {
	Message              string            `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code                 int32             `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Validation           map[string]string `protobuf:"bytes,3,rep,name=validation,proto3" json:"validation,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f978737ae6b5eaf, []int{3}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetValidation() map[string]string {
	if m != nil {
		return m.Validation
	}
	return nil
}

func init() {
	proto.RegisterType((*SendRequest)(nil), "pb.SendRequest")
	proto.RegisterType((*SendResponse)(nil), "pb.SendResponse")
	proto.RegisterType((*Email)(nil), "pb.Email")
	proto.RegisterType((*Error)(nil), "pb.Error")
	proto.RegisterMapType((map[string]string)(nil), "pb.Error.ValidationEntry")
}

func init() { proto.RegisterFile("mailer_service.proto", fileDescriptor_9f978737ae6b5eaf) }

var fileDescriptor_9f978737ae6b5eaf = []byte{
	// 383 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0x4d, 0xcb, 0xd3, 0x40,
	0x10, 0xc7, 0x4d, 0xd2, 0x3c, 0x4f, 0x3b, 0xb5, 0x2f, 0x2c, 0x3d, 0xac, 0xbd, 0x18, 0x82, 0x48,
	0x41, 0xc8, 0xa1, 0x5e, 0x54, 0xf4, 0x54, 0x0a, 0xf6, 0x20, 0xc8, 0x56, 0xbc, 0x4a, 0x5e, 0x06,
	0x89, 0x26, 0xbb, 0x71, 0x77, 0x53, 0xe8, 0xa7, 0xf2, 0x63, 0xf9, 0x35, 0x64, 0x67, 0xdb, 0x58,
	0x7b, 0x9b, 0xff, 0x6f, 0xfe, 0x3b, 0x3b, 0xb3, 0x3b, 0xb0, 0x6a, 0xf3, 0xba, 0x41, 0xfd, 0xcd,
	0xa0, 0x3e, 0xd5, 0x25, 0x66, 0x9d, 0x56, 0x56, 0xb1, 0xb0, 0x2b, 0xd2, 0x0c, 0xa6, 0x47, 0x94,
	0x95, 0xc0, 0x5f, 0x3d, 0x1a, 0xcb, 0x9e, 0x43, 0x8c, 0xce, 0xcb, 0x83, 0x24, 0xda, 0x4c, 0xb7,
	0x93, 0xac, 0x2b, 0xb2, 0xbd, 0x03, 0xc2, 0xf3, 0xf4, 0x00, 0x4f, 0xbd, 0xdf, 0x74, 0x4a, 0x1a,
	0x64, 0x1c, 0x1e, 0x4d, 0x5f, 0x96, 0x68, 0x0c, 0x0f, 0x92, 0x60, 0x33, 0x16, 0x57, 0x49, 0xa5,
	0xb4, 0x56, 0x9a, 0x87, 0x49, 0x30, 0x94, 0x72, 0x40, 0x78, 0x9e, 0xfe, 0x09, 0x20, 0xa6, 0xda,
	0x6c, 0x0e, 0xa1, 0x55, 0x74, 0x7e, 0x22, 0x42, 0xab, 0x58, 0x02, 0x53, 0x83, 0xb2, 0x42, 0x4d,
	0x69, 0x2a, 0x30, 0x11, 0xb7, 0x88, 0xbd, 0x84, 0xb9, 0x97, 0x87, 0x0a, 0xa5, 0xad, 0xed, 0x99,
	0x47, 0x64, 0xba, 0xa3, 0xae, 0xbd, 0x63, 0x5f, 0xfc, 0xc0, 0xd2, 0xf2, 0x11, 0x19, 0xae, 0x92,
	0x31, 0x18, 0x7d, 0xb4, 0x6d, 0xc3, 0x63, 0xc2, 0x14, 0xb3, 0x15, 0xc4, 0x9f, 0x9b, 0xbc, 0x96,
	0xfc, 0x81, 0xa0, 0x17, 0x6c, 0x0d, 0xe3, 0x2f, 0xd8, 0x76, 0x4d, 0x6e, 0x91, 0x3f, 0x52, 0x62,
	0xd0, 0xec, 0x05, 0xcc, 0x76, 0xbd, 0xb1, 0xaa, 0xdd, 0x29, 0x69, 0x51, 0x5a, 0x3e, 0x26, 0xc3,
	0xff, 0x30, 0xfd, 0xed, 0x26, 0x75, 0x33, 0xbb, 0x7e, 0x5a, 0x34, 0x26, 0xff, 0x8e, 0x97, 0x71,
	0xaf, 0xd2, 0xf5, 0x53, 0xaa, 0x0a, 0x69, 0xd8, 0x58, 0x50, 0xcc, 0xde, 0x02, 0x9c, 0xf2, 0xa6,
	0xae, 0x72, 0x5b, 0x2b, 0xc9, 0x23, 0xfa, 0x92, 0x67, 0xc3, 0x3b, 0x66, 0x5f, 0x87, 0xdc, 0x5e,
	0x5a, 0x7d, 0x16, 0x37, 0xe6, 0xf5, 0x07, 0x58, 0xdc, 0xa5, 0xd9, 0x12, 0xa2, 0x9f, 0x78, 0xbe,
	0xdc, 0xeb, 0x42, 0x37, 0xef, 0x29, 0x6f, 0x7a, 0xbc, 0xbc, 0xb0, 0x17, 0xef, 0xc2, 0x37, 0xc1,
	0xf6, 0x3d, 0xcc, 0x3e, 0xd1, 0xca, 0x1c, 0xfd, 0xc6, 0xb0, 0x57, 0x30, 0x72, 0xff, 0xce, 0x16,
	0xee, 0xfa, 0x9b, 0x8d, 0x59, 0x2f, 0xff, 0x01, 0xbf, 0x12, 0xe9, 0x93, 0xe2, 0x81, 0xf6, 0xeb,
	0xf5, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa8, 0xc3, 0xe4, 0xc7, 0x77, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MailerServiceClient is the client API for MailerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MailerServiceClient interface {
	Send(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendResponse, error)
}

type mailerServiceClient struct {
	cc *grpc.ClientConn
}

func NewMailerServiceClient(cc *grpc.ClientConn) MailerServiceClient {
	return &mailerServiceClient{cc}
}

func (c *mailerServiceClient) Send(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendResponse, error) {
	out := new(SendResponse)
	err := c.cc.Invoke(ctx, "/pb.MailerService/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MailerServiceServer is the server API for MailerService service.
type MailerServiceServer interface {
	Send(context.Context, *SendRequest) (*SendResponse, error)
}

// UnimplementedMailerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMailerServiceServer struct {
}

func (*UnimplementedMailerServiceServer) Send(ctx context.Context, req *SendRequest) (*SendResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}

func RegisterMailerServiceServer(s *grpc.Server, srv MailerServiceServer) {
	s.RegisterService(&_MailerService_serviceDesc, srv)
}

func _MailerService_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MailerServiceServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.MailerService/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MailerServiceServer).Send(ctx, req.(*SendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MailerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.MailerService",
	HandlerType: (*MailerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _MailerService_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mailer_service.proto",
}
