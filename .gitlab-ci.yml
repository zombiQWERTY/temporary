variables:
  GIT_DEPTH: 1

stages:
  - build
  - test
  - deploy

before_script:
  - docker network create erpmodul_network || true

.build-image:
  tags:
    - builder
  stage: build
  script:
    - echo "${CI_REGISTRY_PASSWORD}" | docker login "${CI_REGISTRY}" --username "${CI_REGISTRY_USER}" --password-stdin
    - echo ${CONFIG} | tr ' ' '\n' > ./.env.production && source ./.env.production

    - docker pull $CI_REGISTRY_IMAGE/base-${CI_COMMIT_REF_NAME}:latest || true
    - >
      docker build 
      --cache-from $CI_REGISTRY_IMAGE/base-${CI_COMMIT_REF_NAME}:latest 
      -t "${CI_REGISTRY_IMAGE}/base-${CI_COMMIT_REF_NAME}:${CI_COMMIT_REF_SLUG}"
      -t "${CI_REGISTRY_IMAGE}/base-${CI_COMMIT_REF_NAME}:${CI_COMMIT_SHA:0:7}"
      -t "${CI_REGISTRY_IMAGE}/base-${CI_COMMIT_REF_NAME}:latest"
      -f ./infra/prod/Dockerfile.base .

    - >
      docker build 
      -t "${CI_REGISTRY_IMAGE}/spa-${CI_COMMIT_REF_NAME}:${CI_COMMIT_REF_SLUG}" 
      -t "${CI_REGISTRY_IMAGE}/spa-${CI_COMMIT_REF_NAME}:${CI_COMMIT_SHA:0:7}" 
      -t "${CI_REGISTRY_IMAGE}/spa-${CI_COMMIT_REF_NAME}:latest" 
      -f ./infra/prod/Dockerfile 
      --build-arg="BASE_IMAGE=${CI_REGISTRY_IMAGE}/base-${CI_COMMIT_REF_NAME}:${CI_COMMIT_REF_SLUG}" 
      .

    - >
      docker build 
      -t "${CI_REGISTRY_IMAGE}/storybook-${CI_COMMIT_REF_NAME}:${CI_COMMIT_REF_SLUG}" 
      -t "${CI_REGISTRY_IMAGE}/storybook-${CI_COMMIT_REF_NAME}:${CI_COMMIT_SHA:0:7}" 
      -t "${CI_REGISTRY_IMAGE}/storybook-${CI_COMMIT_REF_NAME}:latest" 
      -f ./infra/prod/Dockerfile.storybook 
      --build-arg="BASE_IMAGE=${CI_REGISTRY_IMAGE}/base-${CI_COMMIT_REF_NAME}:${CI_COMMIT_REF_SLUG}" 
      .

    - |
      docker push "${CI_REGISTRY_IMAGE}/base-${CI_COMMIT_REF_NAME}:${CI_COMMIT_REF_SLUG}"
      docker push "${CI_REGISTRY_IMAGE}/base-${CI_COMMIT_REF_NAME}:${CI_COMMIT_SHA:0:7}"
      docker push "${CI_REGISTRY_IMAGE}/base-${CI_COMMIT_REF_NAME}:latest"

      docker push "${CI_REGISTRY_IMAGE}/spa-${CI_COMMIT_REF_NAME}:${CI_COMMIT_REF_SLUG}"
      docker push "${CI_REGISTRY_IMAGE}/spa-${CI_COMMIT_REF_NAME}:${CI_COMMIT_SHA:0:7}"
      docker push "${CI_REGISTRY_IMAGE}/spa-${CI_COMMIT_REF_NAME}:latest"

      docker push "${CI_REGISTRY_IMAGE}/storybook-${CI_COMMIT_REF_NAME}:${CI_COMMIT_REF_SLUG}"
      docker push "${CI_REGISTRY_IMAGE}/storybook-${CI_COMMIT_REF_NAME}:${CI_COMMIT_SHA:0:7}"
      docker push "${CI_REGISTRY_IMAGE}/storybook-${CI_COMMIT_REF_NAME}:latest"

    - docker logout -- "${CI_REGISTRY}"

.run-tests:
  stage: test
  tags:
    - builder
  script:
    - echo "${CI_REGISTRY_PASSWORD}" | docker login "${CI_REGISTRY}" --username "${CI_REGISTRY_USER}" --password-stdin
    #    - docker run --rm ${CI_REGISTRY_IMAGE}/base-${CI_COMMIT_REF_NAME}:${CI_COMMIT_REF_SLUG} sh -c 'npm test -- --passWithNoTests'
    - docker logout -- "${CI_REGISTRY}"

.deploy-service:
  stage: deploy
  environment: prod
  only:
    refs:
      - main
  script:
    - mkdir -p ${PROJECT_DIRECTORY}/${SERVICE_NAME}
    - |
      cp ./docker-compose.prod.yml ${PROJECT_DIRECTORY}/${SERVICE_NAME}/docker-compose.yml
      sed -i "s#spa_image#${CI_REGISTRY_IMAGE}/spa-${CI_COMMIT_REF_NAME}:latest#g" ${PROJECT_DIRECTORY}/${SERVICE_NAME}/docker-compose.yml
      sed -i "s#storybook_image#${CI_REGISTRY_IMAGE}/storybook-${CI_COMMIT_REF_NAME}:latest#g" ${PROJECT_DIRECTORY}/${SERVICE_NAME}/docker-compose.yml
    - |
      echo "${CI_REGISTRY_PASSWORD}" | docker login "${CI_REGISTRY}" --username "${CI_REGISTRY_USER}" --password-stdin
      docker compose -f ${PROJECT_DIRECTORY}/${SERVICE_NAME}/docker-compose.yml pull
      docker compose -f ${PROJECT_DIRECTORY}/${SERVICE_NAME}/docker-compose.yml up -d
      docker logout -- "${CI_REGISTRY}"
    - |
      rm ${PROJECT_DIRECTORY}/${SERVICE_NAME}/docker-compose.yml

build-prod:
  extends: .build-image
  environment: prod
  only:
    refs:
      - main

build-demo:
  extends: .build-image
  environment: demo
  only:
    refs:
      - demo

build-stage:
  extends: .build-image
  environment: stage
  only:
    refs:
      - dev

test-stage:
  extends: .run-tests
  environment:
    name: stage
  only:
    refs:
      - dev

test-demo:
  extends: .run-tests
  environment:
    name: demo
  only:
    refs:
      - demo

test-prod:
  extends: .run-tests
  environment:
    name: prod
  only:
    refs:
      - main

deploy-stage:
  extends: .deploy-service
  environment: stage
  tags:
    - erpmodul-stage
  only:
    refs:
      - dev

deploy-demo:
  extends: .deploy-service
  environment: demo
  tags:
    - erpmodul-demo
  only:
    refs:
      - demo

deploy-prod:
  extends: .deploy-service
  environment: prod
  tags:
    - erpmodul-prod
  only:
    refs:
      - main

build-branch:
  extends: .build-image
  environment: stage
  except:
    refs:
      - main
      - dev
      - demo

test-branch:
  extends: .run-tests
  environment: stage
  except:
    refs:
      - main
      - dev
      - demo
