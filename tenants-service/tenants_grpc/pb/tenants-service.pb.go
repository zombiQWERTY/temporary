// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tenants-service.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateTenantRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Domain               string   `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTenantRequest) Reset()         { *m = CreateTenantRequest{} }
func (m *CreateTenantRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTenantRequest) ProtoMessage()    {}
func (*CreateTenantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_977d24ff532f7b01, []int{0}
}

func (m *CreateTenantRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTenantRequest.Unmarshal(m, b)
}
func (m *CreateTenantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTenantRequest.Marshal(b, m, deterministic)
}
func (m *CreateTenantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTenantRequest.Merge(m, src)
}
func (m *CreateTenantRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTenantRequest.Size(m)
}
func (m *CreateTenantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTenantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTenantRequest proto.InternalMessageInfo

func (m *CreateTenantRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateTenantRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

type CreateTenantResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTenantResponse) Reset()         { *m = CreateTenantResponse{} }
func (m *CreateTenantResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTenantResponse) ProtoMessage()    {}
func (*CreateTenantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_977d24ff532f7b01, []int{1}
}

func (m *CreateTenantResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTenantResponse.Unmarshal(m, b)
}
func (m *CreateTenantResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTenantResponse.Marshal(b, m, deterministic)
}
func (m *CreateTenantResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTenantResponse.Merge(m, src)
}
func (m *CreateTenantResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTenantResponse.Size(m)
}
func (m *CreateTenantResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTenantResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTenantResponse proto.InternalMessageInfo

func (m *CreateTenantResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type GetCompanyInfoRequest struct {
	TenantID             string   `protobuf:"bytes,1,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCompanyInfoRequest) Reset()         { *m = GetCompanyInfoRequest{} }
func (m *GetCompanyInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetCompanyInfoRequest) ProtoMessage()    {}
func (*GetCompanyInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_977d24ff532f7b01, []int{2}
}

func (m *GetCompanyInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCompanyInfoRequest.Unmarshal(m, b)
}
func (m *GetCompanyInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCompanyInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetCompanyInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCompanyInfoRequest.Merge(m, src)
}
func (m *GetCompanyInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetCompanyInfoRequest.Size(m)
}
func (m *GetCompanyInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCompanyInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCompanyInfoRequest proto.InternalMessageInfo

func (m *GetCompanyInfoRequest) GetTenantID() string {
	if m != nil {
		return m.TenantID
	}
	return ""
}

type GetCompanyInfoResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCompanyInfoResponse) Reset()         { *m = GetCompanyInfoResponse{} }
func (m *GetCompanyInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetCompanyInfoResponse) ProtoMessage()    {}
func (*GetCompanyInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_977d24ff532f7b01, []int{3}
}

func (m *GetCompanyInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCompanyInfoResponse.Unmarshal(m, b)
}
func (m *GetCompanyInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCompanyInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetCompanyInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCompanyInfoResponse.Merge(m, src)
}
func (m *GetCompanyInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetCompanyInfoResponse.Size(m)
}
func (m *GetCompanyInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCompanyInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCompanyInfoResponse proto.InternalMessageInfo

func (m *GetCompanyInfoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateTenantRequest)(nil), "pb.CreateTenantRequest")
	proto.RegisterType((*CreateTenantResponse)(nil), "pb.CreateTenantResponse")
	proto.RegisterType((*GetCompanyInfoRequest)(nil), "pb.GetCompanyInfoRequest")
	proto.RegisterType((*GetCompanyInfoResponse)(nil), "pb.GetCompanyInfoResponse")
}

func init() { proto.RegisterFile("tenants-service.proto", fileDescriptor_977d24ff532f7b01) }

var fileDescriptor_977d24ff532f7b01 = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0xed, 0x22, 0xeb, 0x3a, 0xc8, 0x1e, 0x46, 0x77, 0x8d, 0x39, 0x49, 0x4e, 0x1e, 0xb4,
	0x88, 0x7d, 0x02, 0xa9, 0x20, 0xbd, 0x56, 0x5f, 0x20, 0xad, 0x23, 0xf4, 0xd0, 0x24, 0x76, 0x52,
	0xc1, 0xb7, 0xf1, 0x51, 0xc5, 0xa4, 0x15, 0xab, 0xb9, 0xe5, 0xcf, 0x4c, 0xfe, 0xff, 0xfb, 0x09,
	0xec, 0x3c, 0x19, 0x6d, 0x3c, 0xdf, 0x30, 0x0d, 0xef, 0x5d, 0x4b, 0xb9, 0x1b, 0xac, 0xb7, 0xb8,
	0x72, 0x8d, 0xba, 0x87, 0xd3, 0x72, 0x20, 0xed, 0xe9, 0x39, 0xac, 0xd4, 0xf4, 0x36, 0x12, 0x7b,
	0x44, 0x38, 0x34, 0xba, 0x27, 0x91, 0x5d, 0x66, 0x57, 0xc7, 0x75, 0x38, 0xe3, 0x1e, 0xd6, 0x2f,
	0xb6, 0xd7, 0x9d, 0x11, 0xab, 0x70, 0x3b, 0x29, 0x75, 0x0b, 0x67, 0x4b, 0x0b, 0x76, 0xd6, 0x30,
	0xa1, 0x80, 0x23, 0x1e, 0xdb, 0x96, 0x98, 0x83, 0xcd, 0xa6, 0x9e, 0xa5, 0x2a, 0x60, 0xf7, 0x48,
	0xbe, 0xb4, 0xbd, 0xd3, 0xe6, 0xa3, 0x32, 0xaf, 0x76, 0x8e, 0x95, 0xb0, 0x89, 0xa8, 0xd5, 0xc3,
	0x14, 0xfd, 0xa3, 0xd5, 0x35, 0xec, 0xff, 0x3e, 0x9a, 0x82, 0x12, 0xb0, 0x77, 0x9f, 0x19, 0x6c,
	0x23, 0x0f, 0x3f, 0xc5, 0xd2, 0x58, 0xc2, 0xc9, 0x6f, 0x4e, 0x3c, 0xcf, 0x5d, 0x93, 0x27, 0xca,
	0x4b, 0xf1, 0x7f, 0x10, 0x93, 0xd4, 0x01, 0x56, 0xb0, 0x5d, 0x52, 0xe0, 0xc5, 0xf7, 0x76, 0xb2,
	0x8e, 0x94, 0xa9, 0xd1, 0x6c, 0xd5, 0xac, 0xc3, 0x2f, 0x14, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xbb, 0xbd, 0x74, 0xd6, 0x9e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TenantsServiceClient is the client API for TenantsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TenantsServiceClient interface {
	CreateTenant(ctx context.Context, in *CreateTenantRequest, opts ...grpc.CallOption) (*CreateTenantResponse, error)
	GetCompanyInfo(ctx context.Context, in *GetCompanyInfoRequest, opts ...grpc.CallOption) (*GetCompanyInfoResponse, error)
}

type tenantsServiceClient struct {
	cc *grpc.ClientConn
}

func NewTenantsServiceClient(cc *grpc.ClientConn) TenantsServiceClient {
	return &tenantsServiceClient{cc}
}

func (c *tenantsServiceClient) CreateTenant(ctx context.Context, in *CreateTenantRequest, opts ...grpc.CallOption) (*CreateTenantResponse, error) {
	out := new(CreateTenantResponse)
	err := c.cc.Invoke(ctx, "/pb.TenantsService/CreateTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantsServiceClient) GetCompanyInfo(ctx context.Context, in *GetCompanyInfoRequest, opts ...grpc.CallOption) (*GetCompanyInfoResponse, error) {
	out := new(GetCompanyInfoResponse)
	err := c.cc.Invoke(ctx, "/pb.TenantsService/GetCompanyInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TenantsServiceServer is the server API for TenantsService service.
type TenantsServiceServer interface {
	CreateTenant(context.Context, *CreateTenantRequest) (*CreateTenantResponse, error)
	GetCompanyInfo(context.Context, *GetCompanyInfoRequest) (*GetCompanyInfoResponse, error)
}

// UnimplementedTenantsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTenantsServiceServer struct {
}

func (*UnimplementedTenantsServiceServer) CreateTenant(ctx context.Context, req *CreateTenantRequest) (*CreateTenantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTenant not implemented")
}
func (*UnimplementedTenantsServiceServer) GetCompanyInfo(ctx context.Context, req *GetCompanyInfoRequest) (*GetCompanyInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCompanyInfo not implemented")
}

func RegisterTenantsServiceServer(s *grpc.Server, srv TenantsServiceServer) {
	s.RegisterService(&_TenantsService_serviceDesc, srv)
}

func _TenantsService_CreateTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantsServiceServer).CreateTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TenantsService/CreateTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantsServiceServer).CreateTenant(ctx, req.(*CreateTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantsService_GetCompanyInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCompanyInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantsServiceServer).GetCompanyInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TenantsService/GetCompanyInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantsServiceServer).GetCompanyInfo(ctx, req.(*GetCompanyInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TenantsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.TenantsService",
	HandlerType: (*TenantsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTenant",
			Handler:    _TenantsService_CreateTenant_Handler,
		},
		{
			MethodName: "GetCompanyInfo",
			Handler:    _TenantsService_GetCompanyInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tenants-service.proto",
}
